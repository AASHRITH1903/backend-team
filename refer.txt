routes

*admin -------
--login
--logout
change_password
view_profile
edit_profile

*club   -------  admin
create_club
update_club
delete_club
view_all_clubs
view_club_details
view_logo
edit_logo
delete_logo

*club_head
--login
--logout
change_password
-create_club_head (frontend also)
-view_all_club_heads (frontend also)
update_club_head
view_profile
edit_profile
view_avatar_me
edit_avatar
delete_avatar

*events
create_event
update_event
delete_event
view_all_events
view_event_details
view_poster
update_poster
delete_poster

*blog
create_blog
update_blog
delete_blog
view_blog
add_gallery
view_gallery
edit_gallery (#remove picture)
upload_files
view_files (#remove_files)

*projects
create_project
update_project
delete_project
view_all_projects
view_project_details
upload_pics
view_pics (#remove_pics)

*achievements
create_achievement
update_achievement
delete_achievement
view_all_achievement
upload_pics
view_pics (#remove_pics)

*notify
write_mail
send_mail

*register

1)Admin can create club heads or delete them and create clubs and 
(while doing so he will provide club head as one of parameters) and delete them
2)Admin can refer to details of clubs and club heads.
3)Club head can only update club details assigned to him by admin.

*Routes(all data will be json) for giving to frontend

1)Club data using club_name
2)All clubs json data
3)All club_heads
4)Club_head details using email_id
5)Events data using owner(all club specific events)
6)Events data using id
7)Acheivements all 
8)Acheivements specific using id
9)Projects all
10)Projects specific using id
11)provide news snippets
12)provide blogs based on parameter "featured"
13)provide events based on month-query
------------------------------------
     this list will continue
------------------------------------

EXTRAS: we have a new concept of search tab in blogs section so queries will be made by user on key-words
        and accordingly server has to provide filtered search results on blogs.